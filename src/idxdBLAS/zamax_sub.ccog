#include <complex.h>
#include <stdio.h>
#include <stdlib.h>
#include <float.h>
#include <math.h>
#include "../config.h"
#include "../common/common.h"
#include "idxdBLAS.h"

/*[[[cog
import cog
import generate
import dataTypes
import amax
import vectorizations

code_block = generate.CodeBlock()
vectorizations.conditionally_include_vectorizations(code_block)
cog.out(str(code_block))
]]]*/
//[[[end]]]

void idxdBLAS_zamax_sub(const int N, const void *X, const int incX, void *amax){
  const double *x = (const double*)X;
  /*[[[cog
  cog.out(generate.generate(amax.AMax(dataTypes.DoubleComplex, "N", "x", "incX", "amax"), cog.inFile, args, params, mode))
  ]]]*/
  //[[[end]]]
}
